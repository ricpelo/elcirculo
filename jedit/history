[replace]
nombre_direccion
nombre_salida
SONIDO_REPETIR
  
TV_Ruido_ogg
FinPrologo
InicioPrologo
msg_becca_tlf_sonando
VOLUMEN_TV_SALON
CANAL_TV_SALON
tv_salon_katie
timer_telefono_katie
sonido_telefono_katie
sonido_tv_katie
gg_mapawin
[vfs.browser.path]
/home/ricardo/IF/INFSP6/ElCirculo
/home/ricardo/IF/INFSP6
/home/ricardo/IF
/home/ricardo/IF/InformATE
/home/ricardo
/home/ricardo/IF/INFSP6/ElCirculo/InformLibrary611
/home/ricardo/IF/INFSP6/ElCirculo/Alpha_pack
/home/ricardo/IF/INFSP6/ElCirculo/Damusix
/home/ricardo/IF/INFSP6/ElCirculo/INFSP6
/home/ricardo/Descargas/transilvaniaR8SRC
/home/ricardo/Descargas
/home/ricardo/IF/INFSP6/ElCirculo/Alpha_pack/ZIPI_NG
/home/ricardo/IF/INFSP6/infsp_I6/Docs Extensiones/Barra
/home/ricardo/IF/INFSP6/infsp_I6/Docs Extensiones
/home/ricardo/IF/INFSP6/infsp_I6
/home/ricardo/IF/INFSP6/Libreria INFSP6
/home/ricardo/IF/INFSP6/LaSonda
/home/ricardo/IF/INFSP6/LaSonda/lib
/home/ricardo/IF/INFSP6/Alien
/home/ricardo/IF/INFSP6/LaSonda/Alpha_pack
[vfs.browser.filter]
*\[^~#\]
[helpviewer.search]
greedy
DIGIT_RE
regular expression
[search.filter]
*.inf
*.h
[action]
plugin-manager
commando-compile
git_checkout_branch
plugin-options
git_commit
git_open_files
projectviewer_set-active
projectviewer_parent-group
projectviewer_wrapper_edit
projectviewer
projectviewer_wrapper_search_project
save
undo
next-line
backspace
insert-newline-indent
textautocomplete-attach2all
finishhim.execute
save-all
prev-char
[clipboard]
new_line; ! ELIUK: agregado salto de linea inicial (solo I6)\n           if (x1 ~= location) {\n             if (x1 has supporter) print \"Sobre \"; else print \"En \";\n             print (the) x1;\n             print \" \", (puedes_) \" ver \";\n           } else print \"\", (_Puedes_) \" ver \";\n\n           if (n == 5) print \"también \";\n           WriteListFrom(child(x1),\n                         ENGLISH_BIT + WORKFLAG_BIT + RECURSE_BIT\n                         + PARTINV_BIT + TERSE_BIT + CONCEAL_BIT);\n           if (x1 ~= location) \".\";\n           \".\";\n
LugarReal().(lm_o.door_dir)
\[ QuitarAcentos buf pars x i word at len;\n\n    if (parser_trace >= 7) ! imprimir el buffer recibido\n    {\n          print \"^\[ QuitarAcentos:  \";\n          print \"Buffer recibido: |\";\n             ImprimeTodoElBuffer(buf);\n          print \"|^\";\n    } \n    tokenise__(buf, pars);\n    for (x=1:x<=tokenCount(pars):x++) ! para cada token\n    {\n  word = tokenDict (pars,x); !dictionary value of token 1,2,3...\n  at = tokenPos (pars,x); ! position in buffer of token 1,2,3...\n  len = WordLength (x);! length in chars of token 1,2,3...\n\n  if (word==0) ! no comprendida\n       {\n    if (parser_trace>=7)\n    {\n        print \"    QuitarAcentos:NO COMPRENDIDO: |\";\n      ImprimeBuffer(buf, at, len);\n        print \"|^\";\n    }\n    for (i=at:i<at+len:i++)\n       switch(buf->i)\n      {\n      \'á\': buf->i=\'a\';\n      \'é\': buf->i=\'e\';\n      \'ë\': buf->i=\'e\';\n      \'í\': buf->i=\'i\';\n      \'ó\': buf->i=\'o\';\n      \'ú\': buf->i=\'u\';\n      \'ü\': buf->i=\'u\';\n      \'ñ\': buf->i=\'n\';\n    !             \'?\': buf->i=\' \';\n    !             \'¿\': buf->i=\' \';\n    !             \'!\': buf->i=\' \';\n    !         \'¡\': buf->i=\' \' ;\n       }\n        tokenise__(buf, pars);\n        }\n    }\n\n    if (parser_trace>=7){\n        print \"    Buffer sin acentos: |\";\n        ImprimeTodoElBuffer(buf);\n        print \"|^\";\n    }\n
Object salon_ruth \"Salón de la casa\"\n  class Lugar\n  with\n    name \'salon\' \'salita\',\n    nombre_direccion \"el salón de la casa\",\n    description \"El salón de la casa de Ruth y Katie.\",\n    out_to fuera_casa_ruth;\n
  move aidan to fuera_casa_ruth;\n
nombre_direccion \"el salón de la casa\",
Object rachel \"Rachel\"\n  class Personaje\n  with\n    name \'rachel\',\n    short_name \"Rachel\",\n    description \"Es Rachel.\";
   if (parse_input_externo == 0) {\n      Keyboard(buffer, parse);\n    } else {\n      if (test_machine.get_input() == 0) {\n        ! Si no había nada en cola ejecuta el flujo normal\n        Keyboard(buffer, parse); \n      } else {\n        if (parse_input_externo == 2) parse_input_externo = 0; ! (c) Alpha\n        ! En caso contrario toma el buffer directamente.\n        Tokenise__(buffer, parse);\n        ! Imprime el comando extraido...\n        ! print \"#\",(string) buffer-->4,\" \";\n      }\n    }\n
\[ KeyboardPrimitive  a_buffer a_table done ix;\n    if (gg_commandstr ~= 0 && gg_command_reading ~= false) {\n        ! get_line_stream\n        done = glk($0091, gg_commandstr, a_buffer+WORDSIZE, (INPUT_BUFFER_LEN-WORDSIZE)-1);\n        if (done == 0) {\n            glk($0044, gg_commandstr, 0); ! stream_close\n            gg_commandstr = 0;\n            gg_command_reading = false;\n            ! L__M(##CommandsRead, 5); would come after prompt\n            ! fall through to normal user input.\n        }\n        else {\n            ! Trim the trailing newline\n            if ((a_buffer+WORDSIZE)->(done-1) == 10) done = done-1;\n            a_buffer-->0 = done;\n            glk($0086, 8); ! set input style\n            glk($0084, a_buffer+WORDSIZE, done); ! put_buffer\n            glk($0086, 0); ! set normal style\n            print \"^\";\n            jump KPContinue;\n        }\n    }\n    done = false;\n    glk($00D0, gg_mainwin, a_buffer+WORDSIZE, INPUT_BUFFER_LEN-WORDSIZE, 0); ! request_line_event\n    while (~~done) {\n        glk($00C0, gg_event); ! select\n        switch (gg_event-->0) {\n          5: ! evtype_Arrange\n            DrawStatusLine();\n          3: ! evtype_LineInput\n            if (gg_event-->1 == gg_mainwin) {\n                a_buffer-->0 = gg_event-->2;\n                done = true;\n            }\n        }\n        ix = HandleGlkEvent(gg_event, 0, a_buffer);\n        if (ix == 2) done = true;\n        else if (ix == -1) done = false;\n    }\n    if (gg_commandstr ~= 0 && gg_command_reading == false) {\n        ! put_buffer_stream\n        glk($0085, gg_commandstr, a_buffer+WORDSIZE, a_buffer-->0);\n        glk($0081, gg_commandstr, 10); ! put_char_stream (newline)\n    }\n  .KPContinue;\n    Tokenise__(a_buffer,a_table);\n    ! It\'s time to close any quote window we\'ve got going.\n    if (gg_quotewin) {\n        glk($0024, gg_quotewin, 0); ! close_window\n        gg_quotewin = 0;\n    }\n\];\n
Constant CANAL_FONDO = 2 - 1;      Constant VOLUMEN_FONDO = 50;\n
Damusix.AsignarCanal(real_location.sgw_mus,DAMUSIX_NCANALMAX-1,CalcVol(real_location.sgw_vol),-1);\n                    Damusix.TocarCanal(DAMUSIX_NCANALMAX-1);
cuarto_katie.sgw_mus
Gathering_Darkness_ogg;
    sgw_img Oscuridad_jpg,\n    sgw_mus 0;\n
Gathering_Darkness_ogg
#ifdef DEBUG;\n\[ WaitDelay delay;\n  return KeyDelay(delay);\n\];\n#endif;\n\n
WaitDelay delay;\n
! Funciones de test. Ver TestMachine_NG.h\n\[ TestPrologoSub;\n  TestPrologo();\n  test_machine.run();\n\];\n
TestPrologoSub;
! Esta versión no muestra los puntos cardinales y representa las direcciones\n! como los nombres de los lugares a los que se llega por esa dirección:\n\[ LanguageDirection d\n  l par;\n  par = true;\n  switch (d) {\n    n_to:    par = false; ! print \"al norte\";\n    s_to:    par = false; ! print \"al sur\";\n    e_to:    par = false; ! print \"al este\";\n    w_to:    par = false; ! print \"al oeste\";\n    ne_to:   par = false; ! print \"al nordeste\";\n    nw_to:   par = false; ! print \"al noroeste\";\n    se_to:   par = false; ! print \"al sudeste\";\n    sw_to:   par = false; ! print \"al suroeste\";\n    u_to:    print \"arriba\";\n    d_to:    print \"abajo\";\n    in_to:   print \"dentro\";\n    out_to:  print \"fuera\";\n    default: return RunTimeError(9, d);\n  }\n  l = LugarReal();\n  print \" \";\n  if (par) print \"(\";\n  l.d.mostrar_nombre();\n  if (par) print \")\";\n\];\n\n\n
[console.System]
git push
git
jugar.sh
compilar-infixe.sh
[search.directory]
/home/ricardo/IF/INFSP6/LaSonda/
[find]
nombre_salida
mostrar_nombre
aaaa
nombre_direccion
KeyboardPrimitive
INCIDEN
SONIDO_BUCLE_INFINITO
NCANALMAX
SimpleFadeOut
INCIDENTAL
IniciarSonidos
CANAL
CalcVol
sgw_mus
INCIDENT
te sigue
LanguageDirection
SalidasSub
Damusix
Include
